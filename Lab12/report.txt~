Q1. In this instance, there are two different SPI devices that exist. So, when this line is runs it sets the base address to the data register of that particular SPI device. 


Q2. This block of code is in an if else statement. So, if there is a tbuf, meaning there is something to be transmitted, the memory base address is set to what tbuf is. Since something is going to be done with the data it will need to increment done the address to get to new data. If there is nothing in tbuf, base address still gets set, but the memory does not increment, so as to not 'skip' data.


Q3. This code is necessary because it makes sure that the program doesn't move on until after the transfer is completed for tbuf or rbuf  and memory is incremented (assuming the tbuf or rbuf exists). 

Q4. In spiReadWrite there is an if else statement, if the byte is less than 4 it will not execute xchng_datablock. This is good because it will ultimately be more efficient to transfer data serially. We use xchng_datablock for large bytes which is only efficient with larger bytes.


Q5. The en
